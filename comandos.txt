------------------------- Comandos basicos de git para manipular el stash ------------------------

git init
  - crea -git en tu directorio de trabajo

git status
  - mira el status actual de tu directorio

git log
  - mira el historial de commits de un archivo en especifio o de todo el directorio

git show
  - Permite ver los cambios que se hicieron sobre un archivo

git add
  - agrega un archivo al stash

git rm --cached
  - Elimina un archivo del stash

git rm --force
  - Elimina un archivo del stash y del disco duro

git commit -m "desc"
  - Guarda un cambio del stash a repositorio

git diff idcomit1 idcomit2
  - Hace una comparacion entre dos commits

---------------- Volver a un commit anterior ------------------------

git reset id --hard
  - Elimina el commit, el stash y el tracked de un archivo que dando como untracked
  - Volvemos a ese commit que elegimos pero los posteriores son borrados

git reset id --soft
  - Elimina un commit pero sin quitar el stash de un archivo y poder hacer otro commit
  - Volvemos a ese commit que elegimos pero los commits posteriores tambien pierden seguimiento y son borrados

git reset id --mixed
  - Elimina un commit y el stash pero el archivo sigue siendo tracked
  - Los commits posteriores tambien son eliminados de git

git checkout id archivo.txt
  - Mueve el HEAD a un commit en especifico


------------- Manipulacion de ramas o branches ----------------------------

git brach new_brach
  - crea una nueva rama

git checkout branch_name
  - Mueve el HEAD a la rama que le indiques

git checkout -b branch_name
  - Crea la rama y te mueve a ella

git merge branch_name
  - Fusiona dos ramas y genera un commit. (Depende de en que rama este tu HEAD el resultado del merge)

git merge --abort
  - revierte un merge

git branch -M main
  - Mueve todos tus commits a otra rama (por lo del cambio de master a main)

git show-branch
  - Muestra cuales son las ramas que existen y cual a sido su historia

git show-branch --all
  - muestra todas las ramas incluyendo las remotas y cual a sido su historia

gitk
  - Muestra de manera grafica toda la informacion del repositorio (ramas, commits, tags y mas)

git push origin <nombre_de_la_rama>
  - Envia una rama a github

----------------- Extra de logs -------------------------------------------

git log --oneline
  - Muestra el id y el titulo de todos los commits

git log --decorate
  - Muestra donde esta  el HEAD point del log

git log --stat
  - Indica brevemente que cambio en el ultimo commit

git log --graph --oneline --all --decorate
  - Muestra de manera grafica las ramas y commits del repositorio en la terminal 

-------------------- SSH KEYS --------------------------------------------

ssh-keygen -t ed25519 -b 4096 -C "correo@dominio.com"
  - Genera una llave SSH (publica y privada) con el correo electronico usando ed25519

ssh-keygen -t rsa -b 4096 -C "correo@dominio.com"
  - Lo mismo que el anterior pero usando un algoritmo mas viejo

ssh-add ~/.ssh/id_rsa
  - Agrega la llave privada al binario de linux que administra las llaves SSH

-------------------- Configuracion --------------------------------

git config --global user.email "email.dominio.com"
  - a√±ade un correo electronico a git

git config --global user.name "username"
  - Agrega tu nombre de usuario

--------------------------- Comandos para repositorios remotos ------------------

git clone url
  - clona un repositorio remoto

git remote add origin main url_del_repo
  - guarda el url del repositorio con el nombre "origin"

git remote
  - muestra los nombres de los repositorios remotos

git remote -v
  - Muestra las acciones que se pueden hacer con el repositorio remoto

git fetch
  - Obtiene los cambios de un repositorio remoto al repositorio local (.git)

git merge
  - Fuciona tu directorio de trabajo con el del directorio del repositorio remoto

git pull origin main
  - hace lo de fetch y merge a la vez

git pull origin main --allow-unrelated-histories
  - Cuando traes cambios de otro repositorio remoto que no tiene relacion con tu repositorio local.
  - Fusiona lo que hay en el repositorio remoto con el local a la fuerza

git push origin main
  - Envia un cambio a la rama main de un repositorio remoto 

-----------------------------------  Tags ---------------------------------------

git tag
  - Muestra los tags que hay en tu repositorio

git tag -a <tag_name> -m "Descripcion del tag" <id del commit>
  - Asigna un tag a un commit

git show-ref --tags
  - Muestra los commits asignados a su tag respectivo

git push origin --tags
  - Envia los tags a github

git tag -d <tag_name>
  - Elimina un tag del repositorio

git push origin :refs/tags/<tag_name>
  - Elimina la referencia al tag en github (por defecto github no borra los tags)

---------------------------- PUSH -------------------------------------------------

git push origin main
  - Envia los cambios a un repositorio remoto

git push origin --tags
  - Envia los tags a un repositorio remoto

git push origin <branch_name>
  - Envia una rama a github

------------------------ Rebase ---------------------------------------------------

git rebase main
  - desde la rama actual (experimento, header, footer, bugfix, etc) haces rebase a la rama main
  (pega mi historia a main)